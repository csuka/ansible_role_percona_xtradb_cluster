---
- name: certs | stat ca.pem
  stat:
    path: /etc/mysql/certs/ca.pem
  register: ca_check

- name: certs | ensure fact is empty
  set_fact:
    host_certs: ""

- name: certs | set fact to copy certs from a host
  set_fact:
    host_certs: "{{ item }}"
  when: host_count == '1' or hostvars[item].percona_cluster.bootstrapper
  run_once: true
  loop: "{{ ansible_play_hosts }}"

- block:

    - name: certs | fetch all required files to localhost
      fetch:
        src: "/var/lib/mysql/{{ item }}.pem"
        flat: true
        dest: "{{ percona_certs_tmp_dir }}/"
      loop: "{{ percona_certs }}"
      delegate_to: "{{ host_certs }}"

    - name: certs | copy all files
      copy:
        src: "{{ percona_certs_tmp_dir }}/{{ item }}.pem"
        dest: "/etc/mysql/certs/{{ item }}.pem"
        mode: '0600'
        owner: mysql
        group: mysql
      loop: "{{ percona_certs }}"

    - name: certs | ensure files are removed in /var/lib/mysql
      file:
        state: absent
        path: "/var/lib/mysql/{{ item }}.pem"
      loop: "{{ percona_certs }}"
      when: not arbiter

    - name: certs | ensure files are symlinked
      file:
        state: link
        src: "/etc/mysql/certs/{{ item }}.pem"
        dest: "/var/lib/mysql/{{ item }}.pem"
      loop: "{{ percona_certs }}"
      when: not arbiter

  when: not ca_check.stat.exists

- name: certs | ensure files are deleted from localhost
  file:
    path: "{{ percona_certs_tmp_dir }}/{{ item }}.pem"
    state: absent
  run_once: true
  delegate_to: localhost
  become: false
  loop: "{{ percona_certs }}"
