---
- name: certs | set fact to copy certs from a host
  set_fact:
    host_certs: "{{ item }}"
  when: hostvars[item].percona_cluster.bootstrapper
  run_once: true
  loop: "{{ ansible_play_hosts }}"

- name: certs | stat ca.pem
  stat:
    path: /etc/mysql/certs/ca.pem
  register: ca_check

- name: certs | set fact
  set_fact:
    ca_check: "{{ ca_check.stat.exists }}"

- block:

    - name: certs | create dict of certificate check
      set_fact:
        ca_status: "{{ dict(keys|zip(values)) }}"
      vars:
        keys: "{{ ansible_play_hosts }}"
        values: "{{ ansible_play_hosts |
                    map('extract', hostvars, ['ca_check'])
                    | list }}"

    - name: certs | set fact when a host does not has the files
      set_fact:
        ca_all: false
      when: ca_status.values() | list is not all

    - name: certs | set fact when all hosts have the files
      set_fact:
        ca_all: true
      when: ca_status.values() | list is all

  run_once: true

- name: certs | share the certs among hosts if one does not has the certs
  block:

    - name: certs | fetch all required files to localhost
      fetch:
        src: "/var/lib/mysql/{{ item }}.pem"
        flat: true
        dest: "{{ percona_certs_tmp_dir }}/"
      loop: "{{ percona_certs }}"
      delegate_to: "{{ host_certs }}"

    - name: certs | copy required files to remaining hosts
      copy:
        src: "{{ percona_certs_tmp_dir }}/{{ item }}.pem"
        dest: "/etc/mysql/certs/{{ item }}.pem"
        mode: '0600'
        owner: mysql
        group: mysql
      loop: "{{ percona_certs }}"

    - name: certs | ensure files are removed in /var/lib/mysql
      file:
        state: absent
        path: "/var/lib/mysql/{{ item }}.pem"
      loop: "{{ percona_certs }}"
      when:
        - not arbiter
        - not ca_check

    - name: certs | ensure files are symlinked
      file:
        state: link
        src: "/etc/mysql/certs/{{ item }}.pem"
        dest: "/var/lib/mysql/{{ item }}.pem"
      loop: "{{ percona_certs }}"
      when:
        - not arbiter
        - not ca_check

  no_log: "{{ percona_no_log }}"
  when: not ca_check or not ca_all

- name: certs | ensure files are deleted from localhost
  file:
    path: "{{ percona_certs_tmp_dir }}/{{ item }}.pem"
    state: absent
  run_once: true
  delegate_to: localhost
  become: false
  loop: "{{ percona_certs }}"
